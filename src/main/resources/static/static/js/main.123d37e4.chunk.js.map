{"version":3,"sources":["actions/types.js","actions/projectActions.js","components/Project/ProjectItem.js","components/Project/AddProjectButton.js","components/Dashboard.js","securityFunctions/setJWToken.js","actions/securityAction.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","actions/backlogAction.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/userManagement/Register.js","components/userManagement/Login.js","securityFunctions/secureRoute.js","components/ProjectBoard/TeamMember/AddTeamMember.js","components/Project/OtherProject.js","components/ProjectBoard/TaskAssigneeProjectBoard.js","components/ProjectBoard/ProjectTasks/TaskHistory.js","components/ProjectBoard/ProjectTasks/ViewProjectTask.js","components/Project/PieChart.js","components/Project/ProjectCharts.js","App.js","serviceWorker.js","index.js"],"names":["GET_ERRORS","createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","getAllProjectMember","id","get","res","ProjectItem","onDeleteClick","props","deleteProject","updateAndDeleteButtons","this","from","to","projectIdentifier","className","onClick","bind","checkDashboard","projectName","description","Component","connect","window","confirm","delete","AddProjectButton","Fragment","Dashboard","getProjects","noProjectDisplay","projects","length","role","contentEmpty","map","key","state","setJWToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","security","validToken","user","userIsNotAuthenticated","userIsAuthenticated","firstName","data-toggle","data-target","AddProject","startDate","endDate","errors","onChange","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newProject","username","password","console","log","classnames","placeholder","initialState","projectMember","project_tasks","project_task","projectTask_history","projectTask_Timer","userTask_Timer","booleanActionPayload","combineReducers","action","filter","backlog","projectSequence","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","match","params","getProject","disabled","Moment","format","addProjectTask","backlog_id","ProjectTask","projectTask_id","deleteProjectTask","priorityString","priorityClass","viewEditToggleDisplay","projectTaskAssignee","onDeleteCLick","buttonDisplay","priority","summary","acceptanceCriteria","Backlog","tasks","project_tasks_props","todoItems","inProgressItems","doneItems","i","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","boardAlgoritham","AddProjectTask","dueDate","newTask","projectMembers","index","propTypes","PropTypes","func","isRequired","object","array","UpdateProjectTask","createdAt","getProjectTaskForTaskForTaskAssignee","project_task_props","updateProjectTask","dueDateUpdate","updateProps","Object","getOwnPropertyNames","propNameFromState","Date","replace","patch","Landing","Register","lastName","confirmPassword","newUser","createNewUser","NewUser","Login","onChnage","LoginRequest","login","setItem","decoded","jwt_decode","component","otherProps","render","AddTeamMember","createNewMember","OtherProject","getProjectsForMember","TaskAssigneeProjectBoard","getProjectTasksForTaskAssignee","TaskHistory","priorityTextOldVal","priorityTextUpdatedVal","projectHistory","attributeName","oldValue","updatedValue","class","ViewProjectTask","flag","getProjectTask","getProjectTaskHistory","priorityText","projectTask_histories","updatedAt","ph","PieChart","projectTask_Timer_","labels","datasets","timeInToDo","timeInProgress","timeInDone","backgroundColor","hoverBackgroundColor","options","legend","position","getUserTaskTimer","ProjectCharts","getProjectTaskTimersArray","getProjectTasksForTimer","jwtToken","decodeJWToken","currentTime","now","exp","App","exact","path","Boolean","hostname","ReactDOM","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.123d37e4.chunk.js","sourcesContent":["export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n\r\n// action types for backlog action\r\nexport const GET_BACKLOG = \"DELETE_PROJECT\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n\r\n// get Project member\r\nexport const GET_PROJECT_MEMBER = \"GET_PROJECT_MEMBER\";\r\nexport const GET_PROJECT_TASK_FOR_ASSIGNEE = \"GET_PROJECT_TASK_FOR_ASSIGNEE\";\r\n\r\n// get Project Task history\r\nexport const GET_PROJECT_TASK_HISTORY = \"GET_PROJECT_TASK_HISTORY\";\r\n\r\n// get project task timer\r\nexport const GET_PROJECT_TASK_TIMER = \"GET_PROJECT_TASK_TIMER\";\r\nexport const GET_PROJECT_TASK_FOR_TIMER = \"GET_PROJECT_TASK_FOR_TIMER\";\r\n\r\n// get user task timer\r\nexport const GET_USER_TASK_TIMER = \"GET_USER_TASK_TIMER\";\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_ERRORS,\r\n  GET_PROJECTS,\r\n  GET_PROJECT,\r\n  DELETE_PROJECT,\r\n  GET_PROJECT_MEMBER\r\n} from \"./types\";\r\n\r\nexport const createProject = (project, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/project\", project);\r\n    history.push(\"/dashboard\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjects = () => async dispatch => {\r\n  const res = await axios.get(\"/api/project/all\");\r\n\r\n  dispatch({\r\n    type: GET_PROJECTS,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const getProject = (id, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/project/${id}`);\r\n    dispatch({\r\n      type: GET_PROJECT,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const deleteProject = id => async dispatch => {\r\n  if (\r\n    window.confirm(\"Delete Project ? This will remove all your Project Data!\")\r\n  ) {\r\n    await axios.delete(`/api/project/${id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT,\r\n      payload: id\r\n    });\r\n  }\r\n};\r\n\r\n// get all project member\r\n\r\nexport const getAllProjectMember = id => async dispatch => {\r\n  const res = await axios.get(`/api/project/allMember/${id}`);\r\n  dispatch({\r\n    type: GET_PROJECT_MEMBER,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\n// get all Project for member\r\n\r\nexport const getProjectsForMember = () => async dispatch => {\r\n  const res = await axios.get(\"/api/project/other\");\r\n\r\n  dispatch({\r\n    type: GET_PROJECTS,\r\n    payload: res.data\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteProject } from \"../../actions/projectActions\";\r\n\r\nclass ProjectItem extends Component {\r\n  onDeleteClick = id => {\r\n    this.props.deleteProject(id);\r\n  };\r\n\r\n  render() {\r\n    const { project } = this.props;\r\n\r\n    const { from } = this.props;\r\n\r\n    let updateAndDeleteButtons;\r\n\r\n    const checkDashboard = project => {\r\n      if (from !== \"otherProject\") {\r\n        return (\r\n          <div>\r\n            <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n              <li className=\"list-group-item board\">\r\n                <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n              </li>\r\n            </Link>\r\n\r\n            <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n              <li className=\"list-group-item update\">\r\n                <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n              </li>\r\n            </Link>\r\n\r\n            <li\r\n              className=\"list-group-item delete\"\r\n              onClick={this.onDeleteClick.bind(this, project.projectIdentifier)}\r\n            >\r\n              <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n            </li>\r\n\r\n            <Link to={`/analytics/${project.projectIdentifier}`}>\r\n              <li className=\"list-group-item update\">\r\n                <i className=\"fa fa-edit pr-1\"> Analytics</i>\r\n              </li>\r\n            </Link>\r\n          </div>\r\n        );\r\n      } else {\r\n        return (\r\n          <Link to={`/OtherBoard/${project.projectIdentifier}`}>\r\n            <li className=\"list-group-item board\">\r\n              <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n            </li>\r\n          </Link>\r\n        );\r\n      }\r\n    };\r\n\r\n    updateAndDeleteButtons = checkDashboard(project);\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card card-body bg-light mb-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-8\">\r\n              <h3>{project.projectName}</h3>\r\n              <p>{project.description}</p>\r\n            </div>\r\n\r\n            <div className=\" d-none d-lg-block col-md-4\">\r\n              <ul className=\"list-group\">{updateAndDeleteButtons}</ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n  deleteProject: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteProject }\r\n)(ProjectItem);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst AddProjectButton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-primary\">\r\n        Add Project +\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AddProjectButton;\r\n","import React, { Component } from \"react\";\r\nimport ProjectItem from \"./Project/ProjectItem\";\r\nimport AddProjectButton from \"./Project/AddProjectButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProjects } from \"../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Dashboard extends Component {\r\n  componentDidMount() {\r\n    this.props.getProjects();\r\n  }\r\n\r\n  render() {\r\n    const projects = this.props.project.projects;\r\n    let noProjectDisplay;\r\n\r\n    const contentEmpty = projects => {\r\n      if (projects.length <= 0) {\r\n        return (\r\n          <div className=\"alert alert-info text-center\" role=\"alert\">\r\n            Please create your project to start with.\r\n          </div>\r\n        );\r\n      }\r\n    };\r\n\r\n    noProjectDisplay = contentEmpty(projects);\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-left\">Projects</h1>\r\n              <hr />\r\n              <div>\r\n                <AddProjectButton />\r\n                <Link\r\n                  to={`/otherProjects/`}\r\n                  className=\"btn btn-primary ml-sm-2 btn-lg\"\r\n                >\r\n                  OTHER PROJECTS\r\n                </Link>\r\n              </div>\r\n              <br />\r\n              <hr />\r\n\r\n              {projects.map(project => (\r\n                <ProjectItem key={project.id} project={project} />\r\n              ))}\r\n              {noProjectDisplay}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  project: state.project\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProjects }\r\n)(Dashboard);\r\n","import axios from \"axios\";\n\nconst setJWToken = token => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setJWToken;\n","import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport setJWToken from \"../securityFunctions/setJWToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createNewUser = (NewUser, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"api/users/register\", NewUser);\r\n    history.push(\"/login\");\r\n\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const createNewMember = (\r\n  backlog_id,\r\n  NewUser,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await axios.post(`/api/project/member/${backlog_id}`, NewUser);\r\n\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = LoginRequest => async dispatch => {\r\n  try {\r\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\r\n\r\n    const { token } = res.data;\r\n    localStorage.setItem(\"jwtToken\", token);\r\n    setJWToken(token);\r\n\r\n    const decoded = jwt_decode(token);\r\n\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: decoded\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n  localStorage.removeItem(\"jwtToken\");\r\n  setJWToken(false);\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {}\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/securityAction\";\r\n\r\nclass Header extends Component {\r\n  logout() {\r\n    this.props.logout();\r\n    window.location.href = \"/\";\r\n  }\r\n\r\n  render() {\r\n    const { validToken, user } = this.props.security;\r\n\r\n    const userIsNotAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/register\">\r\n              Sign Up\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const userIsAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              Dashboard\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link \" to=\"/dashboard\">\r\n              <i className=\"fas fa-user-circle mr-1\" /> {user.firstName}\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              className=\"nav-link\"\r\n              to=\"/logout\"\r\n              onClick={this.logout.bind(this)}\r\n            >\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    let headerLinks;\r\n\r\n    if (validToken && user) {\r\n      headerLinks = userIsAuthenticated;\r\n    } else {\r\n      headerLinks = userIsNotAuthenticated;\r\n    }\r\n\r\n    return (\r\n      <nav className=\"navbar  bg-dark shadow fixed-top mb-4 navbar-expand-sm navbar-dark\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            Kanban\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n\r\n          {headerLinks}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logout }\r\n)(Header);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/projectActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass AddProject extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    const { errors } = this.state;\r\n    e.preventDefault();\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      startDate: this.state.startDate,\r\n      endDate: this.state.endDate\r\n    };\r\n\r\n    if (\r\n      errors.username === \"Invalid Username\" &&\r\n      errors.password === \"Invalid Password\"\r\n    ) {\r\n      this.props.history.push(\"/login\");\r\n    } else {\r\n      this.props.createProject(newProject, this.props.history);\r\n    }\r\n\r\n    console.log(newProject);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"project\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 m-auto\">\r\n                <h5 className=\"display-4 text-center\">Add Project</h5>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg \", {\r\n                        \"is-invalid\": errors.projectName\r\n                      })}\r\n                      placeholder=\"Project Name\"\r\n                      name=\"projectName\"\r\n                      value={this.state.projectName}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectName && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectName}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.projectIdentifier\r\n                      })}\r\n                      placeholder=\"Unique Project ID\"\r\n                      name=\"projectIdentifier\"\r\n                      value={this.state.projectIdentifier}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectIdentifier && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectIdentifier}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.description\r\n                      })}\r\n                      placeholder=\"Project Description\"\r\n                      name=\"description\"\r\n                      value={this.state.description}\r\n                      onChange={this.onChange}\r\n                    ></textarea>\r\n                    {errors.description && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.description}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <h6>Start Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"startDate\"\r\n                      value={this.state.startDate}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    <p>{errors.startDate}</p>\r\n                  </div>\r\n                  <h6>Estimated End Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"endDate\"\r\n                      onChange={this.onChange}\r\n                    />\r\n                    <p>{errors.endDate}</p>\r\n                  </div>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mt-4\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProject.propTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createProject }\r\n)(AddProject);\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_PROJECTS,\r\n  GET_PROJECT,\r\n  DELETE_PROJECT,\r\n  GET_PROJECT_MEMBER\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  projects: [],\r\n  project: {},\r\n  projectMember: []\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROJECTS:\r\n      return {\r\n        ...state,\r\n        projects: action.payload\r\n      };\r\n    case GET_PROJECT:\r\n      return {\r\n        ...state,\r\n        project: action.payload\r\n      };\r\n    case DELETE_PROJECT:\r\n      return {\r\n        ...state,\r\n        projects: state.projects.filter(\r\n          project => project.projectIdentifier !== action.payload\r\n        )\r\n      };\r\n    case GET_PROJECT_MEMBER:\r\n      return {\r\n        ...state,\r\n        projectMember: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK,\r\n  GET_PROJECT_TASK_FOR_ASSIGNEE,\r\n  GET_PROJECT_TASK_HISTORY,\r\n  GET_PROJECT_TASK_TIMER,\r\n  GET_PROJECT_TASK_FOR_TIMER\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  project_tasks: [],\r\n  project_task: {},\r\n  projectTask_history: [],\r\n  projectTask_Timer: [],\r\n  userTask_Timer: []\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_BACKLOG:\r\n      return {\r\n        ...state,\r\n        project_tasks: action.payload\r\n      };\r\n\r\n    case GET_PROJECT_TASK_FOR_ASSIGNEE:\r\n      return {\r\n        ...state,\r\n        project_tasks: action.payload\r\n      };\r\n    case GET_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_task: action.payload\r\n      };\r\n\r\n    case GET_PROJECT_TASK_FOR_TIMER:\r\n      return {\r\n        ...state,\r\n        project_tasks: action.payload\r\n      };\r\n\r\n    case GET_PROJECT_TASK_HISTORY:\r\n      return {\r\n        ...state,\r\n        projectTask_history: action.payload\r\n      };\r\n\r\n    case GET_PROJECT_TASK_TIMER:\r\n      return {\r\n        ...state,\r\n        projectTask_Timer: action.payload\r\n      };\r\n    case DELETE_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_tasks: state.project_tasks.filter(\r\n          project_task => project_task.projectSequence !== action.payload\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_CURRENT_USER } from \"../actions/types\";\n\nconst initialState = {\n  validToken: false,\n  user: {}\n};\n\nconst booleanActionPayload = payload => {\n  if (payload) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        validToken: booleanActionPayload(action.payload),\n        user: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  project: projectReducer,\r\n  backlog: backlogReducer,\r\n  security: securityReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n      applyMiddleware(...middleware),\r\n      ReactReduxDevTools\r\n    )\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n}\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { getProject, createProject } from \"../../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport Moment from \"moment\";\r\n\r\nclass UpdateProject extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    const {\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      startDate,\r\n      endDate\r\n    } = nextProps.project;\r\n\r\n    this.setState({\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      startDate,\r\n      endDate\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getProject(id, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const UpdateProject = {\r\n      id: this.state.id,\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      startDate: this.state.startDate,\r\n      endDate: this.state.endDate\r\n    };\r\n\r\n    this.props.createProject(UpdateProject, this.props.history);\r\n  }\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"project\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 m-auto\">\r\n                <h5 className=\"display-4 text-center\">Update Project</h5>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg \", {\r\n                        \"is-invalid\": errors.projectName\r\n                      })}\r\n                      placeholder=\"Project Name\"\r\n                      name=\"projectName\"\r\n                      value={this.state.projectName}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectName && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectName}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control form-control-lg\"\r\n                      placeholder=\"Unique Project ID\"\r\n                      disabled\r\n                      name=\"projectIdentifier\"\r\n                      value={this.state.projectIdentifier}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.description\r\n                      })}\r\n                      placeholder=\"Project Description\"\r\n                      name=\"description\"\r\n                      value={this.state.description}\r\n                      onChange={this.onChange}\r\n                    ></textarea>\r\n                    {errors.description && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.description}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <h6>Start Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"startDate\"\r\n                      value={Moment(this.state.startDate).format(\"YYYY-MM-D\")}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <h6>Estimated End Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"endDate\"\r\n                      value={Moment(this.state.endDate).format(\"YYYY-MM-D\")}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mt-4\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  createProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project.project,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProject, createProject }\r\n)(UpdateProject);\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_ERRORS,\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK,\r\n  GET_PROJECT_TASK_FOR_ASSIGNEE,\r\n  GET_PROJECT_TASK_HISTORY,\r\n  GET_PROJECT_TASK_TIMER,\r\n  GET_PROJECT_TASK_FOR_TIMER,\r\n  GET_USER_TASK_TIMER\r\n} from \"./types\";\r\n\r\nexport const addProjectTask = (\r\n  backlog_id,\r\n  project_task,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getBacklog = backlog_id => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_BACKLOG,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjectTask = (\r\n  backlog_id,\r\n  projectTask_id,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}/${projectTask_id}`);\r\n\r\n    dispatch({\r\n      type: GET_PROJECT_TASK,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    // history.push(`/dashboard`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\nexport const getProjectTaskForTaskForTaskAssignee = (\r\n  backlog_id,\r\n  projectTask_id,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    const assignee = true;\r\n    const res = await axios.get(\r\n      `/api/backlog/${backlog_id}/${projectTask_id}/${assignee}`\r\n    );\r\n\r\n    dispatch({\r\n      type: GET_PROJECT_TASK,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    history.push(`/otherProjects`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateProjectTask = (\r\n  backlog_id,\r\n  projectTask_id,\r\n  project_task,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await axios.patch(\r\n      `/api/backlog/${backlog_id}/${projectTask_id}`,\r\n      project_task\r\n    );\r\n\r\n    history.push(`/OtherBoard/${backlog_id}`);\r\n\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProjectTask = (\r\n  backlog_id,\r\n  projectTask_id\r\n) => async dispatch => {\r\n  if (\r\n    window.confirm(\r\n      `You are trying to Delete Project Task ${projectTask_id}, All task related data will be deleted and cannot be undone.`\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/backlog/${backlog_id}/${projectTask_id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT_TASK,\r\n      payload: projectTask_id\r\n    });\r\n  }\r\n};\r\n\r\n//update timer for all tasks\r\n\r\nexport const updateTimer = () => async dispatch => {};\r\n\r\n// get all project tasks for project assignee\r\n\r\nexport const getProjectTasksForTaskAssignee = backlog_id => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/taskAssignee/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_PROJECT_TASK_FOR_ASSIGNEE,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\n// get all project task history with task id(Long)\r\n\r\nexport const getProjectTaskHistory = id => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/projectHistory/${id}`);\r\n\r\n    dispatch({\r\n      type: GET_PROJECT_TASK_HISTORY,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\n// get ProjectTaskTimer array by passign projectIdentifier\r\n\r\nexport const getProjectTaskTimersArray = projectIdentifier => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/projectTaskTimer/${projectIdentifier}`);\r\n\r\n    dispatch({\r\n      type: GET_PROJECT_TASK_TIMER,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\n// get projectTask for timer\r\nexport const getProjectTasksForTimer = projectIdentifier => async dispatch => {\r\n  try {\r\n    const res = await axios.get(\r\n      `/api/projectTaskTimer/pt/${projectIdentifier}`\r\n    );\r\n\r\n    dispatch({\r\n      type: GET_PROJECT_TASK_FOR_TIMER,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    // history.push(`/dashboard`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\n// get user task timer\r\n\r\nexport const getUserTaskTimer = projectSequence => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/userTaskTimer/${projectSequence}`);\r\n\r\n    dispatch({\r\n      type: GET_USER_TASK_TIMER,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    // history.push(`/dashboard`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteProjectTask } from \"../../../actions/backlogAction\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ProjectTask extends Component {\r\n  onDeleteCLick(backlog_id, projectTask_id) {\r\n    this.props.deleteProjectTask(backlog_id, projectTask_id);\r\n  }\r\n  render() {\r\n    const { project_task } = this.props;\r\n\r\n    const { user } = this.props.security;\r\n    let priorityString;\r\n    let priorityClass;\r\n\r\n    let viewEditToggleDisplay;\r\n\r\n    const buttonDisplay = (project_task, user) => {\r\n      if (project_task.projectTaskAssignee === user.username) {\r\n        return (\r\n          <Link\r\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            Update\r\n          </Link>\r\n        );\r\n      } else {\r\n        return (\r\n          <div>\r\n            <Link\r\n              to={`/viewProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`}\r\n              className=\"btn btn-primary\"\r\n            >\r\n              View\r\n            </Link>\r\n            <button\r\n              className=\"btn btn-danger ml-4\"\r\n              onClick={this.onDeleteCLick.bind(\r\n                this,\r\n                project_task.projectIdentifier,\r\n                project_task.projectSequence\r\n              )}\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n        );\r\n      }\r\n    };\r\n\r\n    viewEditToggleDisplay = buttonDisplay(project_task, user);\r\n\r\n    if (project_task.priority === \"1\") {\r\n      priorityClass = \"bg-danger text-light\";\r\n      priorityString = \"HIGH\";\r\n    }\r\n\r\n    if (project_task.priority === \"2\") {\r\n      priorityClass = \"bg-warning text-light\";\r\n      priorityString = \"MEDIUM\";\r\n    }\r\n\r\n    if (project_task.priority === \"3\") {\r\n      priorityClass = \"bg-info text-light\";\r\n      priorityString = \"LOW\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"card mb-1 bg-light\">\r\n        <div className={`card-header text-primary ${priorityClass}`}>\r\n          ID: {project_task.projectSequence} Priority: {priorityString}\r\n        </div>\r\n        <div className=\"card-body bg-light\">\r\n          <h5 className=\"card-title\">{project_task.summary}</h5>\r\n          <p className=\"card-text text-truncate \">\r\n            {project_task.acceptanceCriteria}\r\n          </p>\r\n          {viewEditToggleDisplay}\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    {\r\n      // <!-- SAMPLE PROJECT TASK ENDS HERE -->\r\n    }\r\n  }\r\n}\r\n\r\nProjectTask.propTypes = {\r\n  deleteProjectTask: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { deleteProjectTask }\r\n)(ProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\r\n\r\nclass Backlog extends Component {\r\n  render() {\r\n    const { project_tasks_props } = this.props;\r\n\r\n    const tasks = project_tasks_props.map(project_task => (\r\n      <ProjectTask key={project_task.id} project_task={project_task} />\r\n    ));\r\n\r\n    let todoItems = [];\r\n    let inProgressItems = [];\r\n    let doneItems = [];\r\n\r\n    for (let i = 0; i < tasks.length; i++) {\r\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\r\n        todoItems.push(tasks[i]);\r\n      }\r\n\r\n      if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\r\n        inProgressItems.push(tasks[i]);\r\n      }\r\n\r\n      if (tasks[i].props.project_task.status === \"DONE\") {\r\n        doneItems.push(tasks[i]);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-secondary text-white\">\r\n                <h3>TO DO</h3>\r\n              </div>\r\n            </div>\r\n            {todoItems}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-primary text-white\">\r\n                <h3>In Progress</h3>\r\n              </div>\r\n            </div>\r\n            {inProgressItems}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-success text-white\">\r\n                <h3>Done</h3>\r\n              </div>\r\n            </div>\r\n            {doneItems}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Backlog;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Backlog from \"./Backlog\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getBacklog } from \"../../actions/backlogAction\";\r\n\r\nclass ProjectBoard extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getBacklog(id);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n\r\n    const { project_tasks } = this.props.backlog;\r\n\r\n    const { errors } = this.state;\r\n\r\n    let BoardContent;\r\n\r\n    const boardAlgoritham = (errors, project_tasks) => {\r\n      if (project_tasks.length < 1) {\r\n        if (errors.projectNotFound) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectNotFound}\r\n            </div>\r\n          );\r\n        } else if (errors.projectIdentifier) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectIdentifier}\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div className=\"alert alert-info text-center\" role=\"alert\">\r\n              No Project Task on this board.\r\n            </div>\r\n          );\r\n        }\r\n      } else {\r\n        return <Backlog project_tasks_props={project_tasks} />;\r\n      }\r\n    };\r\n\r\n    BoardContent = boardAlgoritham(errors, project_tasks);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <Link\r\n          to={`/addProjectTask/${id}`}\r\n          className=\"btn btn-primary mb-3 btn-lg\"\r\n        >\r\n          <i className=\"fas fa-plus-circle\"></i> Create Project Task\r\n        </Link>\r\n        <Link\r\n          to={`/addTeamMember/${id}`}\r\n          className=\"btn btn-primary mb-3 btn-lg ml-md-4\"\r\n        >\r\n          <i className=\"fas fa-plus-circle\"></i> Add Team Member\r\n        </Link>\r\n        <br />\r\n        <hr />\r\n        {BoardContent}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n  backlog: PropTypes.object.isRequired,\r\n  getBacklog: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  backlog: state.backlog,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getBacklog }\r\n)(ProjectBoard);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { addProjectTask } from \"../../../actions/backlogAction\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getAllProjectMember } from \"../../../actions/projectActions\";\r\n\r\nclass AddProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    this.state = {\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: 0,\r\n      dueDate: \"\",\r\n      projectIdentifier: id,\r\n      projectTaskAssignee: \"\",\r\n      errors: {},\r\n      projectMember: []\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getAllProjectMember(id);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    const { projectMember } = nextProps.projectMember;\r\n\r\n    this.setState({\r\n      projectMember\r\n    });\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newTask = {\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      projectTaskAssignee: this.state.projectTaskAssignee,\r\n      dueDate: this.state.dueDate\r\n    };\r\n    console.log(newTask);\r\n    this.props.addProjectTask(\r\n      this.state.projectIdentifier,\r\n      newTask,\r\n      this.props.history\r\n    );\r\n  }\r\n  render() {\r\n    let projectMembers = null;\r\n    const { id } = this.props.match.params;\r\n    const { errors } = this.state;\r\n    if (this.props.projectMember === \"undefined\") {\r\n      return null;\r\n    } else {\r\n      projectMembers = this.props.projectMember;\r\n    }\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n              <p className=\"lead text-center\">Project Name + Project Code</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"projectTaskAssignee\"\r\n                    value={this.state.projectTaskAssignee}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Task Assignee</option>\r\n                    {projectMembers.map((projectMember, index) => (\r\n                      <option key={index} value={projectMember.username}>\r\n                        {projectMember.username}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\naddProjectTask.propTypes = {\r\n  addProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  getAllProjectMember: PropTypes.func.isRequired,\r\n  projectMember: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors,\r\n  projectMember: state.project.projectMember\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addProjectTask, getAllProjectMember }\r\n)(AddProjectTask);\r\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport {\n  updateProjectTask,\n  getProjectTaskForTaskForTaskAssignee\n} from \"../../../actions/backlogAction\";\nimport PropTypes from \"prop-types\";\nimport { getAllProjectMember } from \"../../../actions/projectActions\";\nimport Moment from \"moment\";\n\nclass UpdateProjectTask extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectSequence: \"\",\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: \"\",\n      projectIdentifier: \"\",\n      dueDate: \"\",\n      createdAt: \"\",\n      projectTaskAssignee: \"\",\n      errors: {},\n      projectMember: []\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const { backlog_id, projectTask_id } = this.props.match.params;\n    this.props.getProjectTaskForTaskForTaskAssignee(\n      backlog_id,\n      projectTask_id,\n      this.props.history\n    );\n    this.props.getAllProjectMember(backlog_id);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors && !nextProps.project_task) {\n      this.setState({ errors: nextProps.errors });\n    }\n    const {\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      projectIdentifier,\n      dueDate,\n      createdAt,\n      projectTaskAssignee\n    } = nextProps.project_task;\n\n    const { projectMember } = nextProps.projectMember;\n\n    this.setState({\n      projectMember\n    });\n\n    this.setState({\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      projectIdentifier,\n      dueDate,\n      createdAt,\n      projectTaskAssignee\n    });\n  }\n\n  onChange(e) {\n    var value = e.target.value;\n    this.setState({ [e.target.name]: value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const project_task_props = this.props.project_task;\n\n    const updateProjectTask = {\n      id: this.state.id,\n      projectSequence: this.state.projectSequence,\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      projectIdentifier: this.state.projectIdentifier,\n      dueDate: this.state.dueDate,\n      createdAt: this.state.createdAt,\n      projectTaskAssignee: this.state.projectTaskAssignee,\n      dueDateUpdate: \"NOT UPDATED\"\n    };\n\n    // get all properties name from UpdateProjectTask\n    // compare properties value with prop\n    // modify updateProjectTask object and add \"UPDATED+\"\n\n    var updateProps = Object.getOwnPropertyNames(updateProjectTask);\n\n    for (var i = 0; i < updateProps.length; i++) {\n      var propNameFromState = updateProps[i];\n\n      if (\n        updateProjectTask[propNameFromState] !==\n          project_task_props[propNameFromState] &&\n        propNameFromState !== \"dueDate\" &&\n        propNameFromState !== \"dueDateUpdate\"\n      ) {\n        updateProjectTask[propNameFromState] =\n          \"UPDATED+\" + updateProjectTask[propNameFromState];\n      } else if (\n        updateProjectTask[propNameFromState] !==\n          project_task_props[propNameFromState] &&\n        propNameFromState === \"dueDate\"\n      ) {\n        updateProjectTask[\"dueDate\"] = new Date(\n          this.state.dueDate.replace(/-/g, \"/\")\n        );\n\n        updateProjectTask[\"dueDateUpdate\"] = \"UPDATED+dueDate\";\n      }\n    }\n    console.log(updateProjectTask);\n\n    this.props.updateProjectTask(\n      this.state.projectIdentifier,\n      this.state.projectSequence,\n      updateProjectTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { user } = this.props.security;\n    const { errors } = this.state;\n    let projectMembers = null;\n\n    if (this.props.projectMember === \"undefined\") {\n      return null;\n    } else {\n      projectMembers = this.props.projectMember;\n    }\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link\n                to={`/otherBoard/${this.state.projectIdentifier}`}\n                className=\"btn btn-light\"\n              >\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\n              <p className=\"lead text-center\">\n                Project Name: {this.state.projectIdentifier} + Project Task Id :{\" \"}\n                {this.state.projectSequence}\n              </p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback \">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"projectTaskAssignee\"\n                    value={this.state.projectTaskAssignee}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Task Assignee</option>\n                    {projectMembers.map((projectMember, index) => (\n                      <option key={index} value={projectMember.username}>\n                        {projectMember.username}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  ></textarea>\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={Moment(this.state.dueDate).format(\"YYYY-MM-D\")}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProjectTask.propTypes = {\n  project_task: PropTypes.object.isRequired,\n  updateProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  getAllProjectMember: PropTypes.func.isRequired,\n  projectMember: PropTypes.array.isRequired,\n  getProjectTaskForTaskForTaskAssignee: PropTypes.func.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project_task: state.backlog.project_task,\n  errors: state.errors,\n  projectMember: state.project.projectMember,\n  security: state.security\n});\nexport default connect(\n  mapStateToProps,\n  {\n    updateProjectTask,\n    getAllProjectMember,\n    getProjectTaskForTaskForTaskAssignee\n  }\n)(UpdateProjectTask);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nclass Landing extends Component {\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"landing\">\n        <div className=\"light-overlay landing-inner text-dark\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12 text-center\">\n                <h1 className=\"display-3 mb-4\">Kanban Tool</h1>\n                <p className=\"lead\">Manage your work, Manage your life</p>\n                <hr />\n                <Link to=\"/register\" className=\"btn btn-lg btn-primary mr-2\">\n                  Sign Up\n                </Link>\n                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\n                  Login\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps)(Landing);\n","import React, { Component } from \"react\";\nimport { createNewUser } from \"../../actions/securityAction\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const newUser = {\n      username: this.state.username,\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword\n    };\n\n    this.props.createNewUser(newUser, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\n              <p className=\"lead text-center\">Create your Account</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.firstName\n                    })}\n                    placeholder=\"First Name\"\n                    name=\"firstName\"\n                    value={this.state.firstName}\n                    onChange={this.onChange}\n                  />\n                  {errors.firstName && (\n                    <div className=\"invalid-feedback\">{errors.firstName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.lastName\n                    })}\n                    placeholder=\"Last Name\"\n                    name=\"lastName\"\n                    value={this.state.lastName}\n                    onChange={this.onChange}\n                  />\n                  {errors.lastName && (\n                    <div className=\"invalid-feedback\">{errors.lastName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"email\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username\n                    })}\n                    placeholder=\"Email Address\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.lastName && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.confirmPassword\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"confirmPassword\"\n                    value={this.state.confirmPassword}\n                    onChange={this.onChange}\n                  />\n                  {errors.confirmPassword && (\n                    <div className=\"invalid-feedback\">\n                      {errors.confirmPassword}\n                    </div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  createNewUser: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  security: state.security\n});\nexport default connect(\n  mapStateToProps,\n  { createNewUser }\n)(Register);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { login } from \"../../actions/securityAction\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errors: {}\n    };\n\n    this.onChnage = this.onChnage.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const LoginRequest = {\n      username: this.state.username,\n      password: this.state.password\n    };\n\n    this.props.login(LoginRequest);\n  }\n  onChnage(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Log In</h1>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username\n                    })}\n                    placeholder=\"Email Address\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChnage}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChnage}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  security: state.security,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { login }\n)(Login);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst secureRoute = ({ component: Component, security, ...otherProps }) => (\n  <Route\n    {...otherProps}\n    render={props =>\n      security.validToken === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nsecureRoute.propTypes = {\n  security: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  security: state.security\n});\nexport default connect(mapStateToProps)(secureRoute);\n","import React, { Component } from \"react\";\r\nimport { createNewMember } from \"../../../actions/securityAction\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass AddTeamMember extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const { id } = this.props.match.params;\r\n    const projectMember = {\r\n      username: this.state.username,\r\n      firstName: this.state.firstName,\r\n      lastName: this.state.lastName,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword\r\n    };\r\n    console.log(id);\r\n    this.props.createNewMember(id, projectMember, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Add Team Member</h1>\r\n              <p className=\"lead text-center\">Create your Account</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.firstName\r\n                    })}\r\n                    placeholder=\"First name\"\r\n                    name=\"firstName\"\r\n                    value={this.state.firstName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.firstName && (\r\n                    <div className=\"invalid-feedback\">{errors.firstName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.lastName\r\n                    })}\r\n                    placeholder=\"Last name\"\r\n                    name=\"lastName\"\r\n                    value={this.state.lastName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.lastName && (\r\n                    <div className=\"invalid-feedback\">{errors.lastName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"email\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.confirmPassword\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"confirmPassword\"\r\n                    value={this.state.confirmPassword}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.confirmPassword && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.confirmPassword}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddTeamMember.propTypes = {\r\n  createNewMember: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors,\r\n  security: state.security\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createNewMember }\r\n)(AddTeamMember);\r\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getProjectsForMember } from \"../../actions/projectActions\";\nimport PropTypes from \"prop-types\";\nimport ProjectItem from \"../Project/ProjectItem\";\n\nclass OtherProject extends Component {\n  componentDidMount() {\n    this.props.getProjectsForMember();\n  }\n  render() {\n    const { projects } = this.props.project;\n\n    let noProjectDisplay;\n\n    const contentEmpty = projects => {\n      if (projects.length <= 0) {\n        return (\n          <div className=\"alert alert-info text-center\" role=\"alert\">\n            No Project assigned to you currently.\n          </div>\n        );\n      }\n    };\n\n    noProjectDisplay = contentEmpty(projects);\n    return (\n      <div className=\"projects\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h3 className=\"display-4 text-left\">Assigned Projects</h3>\n              <hr />\n              <div>\n                {noProjectDisplay}\n                {projects.map(project => (\n                  <ProjectItem\n                    key={project.id}\n                    project={project}\n                    from={\"otherProject\"}\n                  />\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nOtherProject.propTypes = {\n  project: PropTypes.object.isRequired,\n  getProjectsForMember: PropTypes.func.isRequired\n};\nconst mapStateToProps = state => ({\n  project: state.project\n});\nexport default connect(\n  mapStateToProps,\n  { getProjectsForMember }\n)(OtherProject);\n","import React, { Component } from \"react\";\nimport { getProjectTasksForTaskAssignee } from \"../../actions/backlogAction\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport Backlog from \"./Backlog\";\n\nclass TaskAssigneeProjectBoard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getProjectTasksForTaskAssignee(id);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n  render() {\n    const { id } = this.props.match.params;\n\n    const { project_tasks } = this.props.backlog;\n\n    const { errors } = this.state;\n\n    let BoardContent;\n\n    const boardAlgoritham = (errors, project_tasks) => {\n      if (project_tasks.length < 1) {\n        if (errors.projectNotFound) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectNotFound}\n            </div>\n          );\n        } else if (errors.projectIdentifier) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectIdentifier}\n            </div>\n          );\n        } else {\n          return (\n            <div className=\"alert alert-info text-center\" role=\"alert\">\n              No Project Task on this board.\n            </div>\n          );\n        }\n      } else {\n        return <Backlog project_tasks_props={project_tasks} />;\n      }\n    };\n\n    BoardContent = boardAlgoritham(errors, project_tasks);\n\n    return (\n      <div className=\"container\">\n        <Link to={`/otherProjects/`} className=\"btn btn-light\">\n          Back to Assigned Project Board\n        </Link>\n        <h3 className=\"display-4 text-left\">Assigned Tasks</h3>\n        <hr />\n        {BoardContent}\n      </div>\n    );\n  }\n}\n\nTaskAssigneeProjectBoard.propTypes = {\n  backlog: PropTypes.object.isRequired,\n  getProjectTasksForTaskAssignee: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  backlog: state.backlog,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProjectTasksForTaskAssignee }\n)(TaskAssigneeProjectBoard);\n","import React, { Component } from \"react\";\nimport { getProjectTaskHistory } from \"../../../actions/backlogAction\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"moment\";\n\nclass TaskHistory extends Component {\n  render() {\n    const { projectHistory } = this.props;\n\n    let priorityTextOldVal;\n    let priorityTextUpdatedVal;\n    const priority = (projectHistory, id) => {\n      if (id === \"1\") {\n        return <span>High</span>;\n      } else if (id === \"2\") {\n        return <span>Medium</span>;\n      } else {\n        return <span>Low</span>;\n      }\n    };\n\n    if (projectHistory.attributeName === \"priority\") {\n      priorityTextOldVal = priority(projectHistory, projectHistory.oldValue);\n      priorityTextUpdatedVal = priority(\n        projectHistory,\n        projectHistory.updatedValue\n      );\n    } else if (projectHistory.attributeName === \"dueDate\") {\n      priorityTextOldVal = Moment(projectHistory.oldValue).format(\"YYYY-MM-D\");\n      priorityTextUpdatedVal = Moment(projectHistory.updatedValue).format(\n        \"YYYY-MM-D\"\n      );\n    } else {\n      priorityTextOldVal = projectHistory.oldValue;\n      priorityTextUpdatedVal = projectHistory.updatedValue;\n    }\n\n    return (\n      <div>\n        <div className=\"alert alert-info\" role=\"alert\">\n          <i class=\"fas fa-edit alert-dark\"></i>\n          <strong>{projectHistory.attributeName}</strong> chnaged from{\" \"}\n          <strong>{priorityTextOldVal}</strong> to{\" \"}\n          <strong>{priorityTextUpdatedVal}</strong> on{\" \"}\n          <strong>\n            {Moment(projectHistory.createdAt).format(\"YYYY-MM-D\")}\n          </strong>{\" \"}\n          by <strong>{projectHistory.username}</strong>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {}\n)(TaskHistory);\n","import React, { Component } from \"react\";\nimport {\n  getProjectTask,\n  getProjectTaskHistory\n} from \"../../../actions/backlogAction\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"moment\";\nimport TaskHistory from \"./TaskHistory\";\n\nclass ViewProjectTask extends Component {\n  constructor() {\n    super();\n    this.state = {\n      errors: {},\n      flag: false\n    };\n  }\n\n  componentDidMount() {\n    const { backlog_id, projectTask_id } = this.props.match.params;\n    this.props.getProjectTask(backlog_id, projectTask_id, this.props.history);\n  }\n\n  componentWillUpdate(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n  componentWillReceiveProps(nextProps) {\n    // get data only after receiving project_task props\n    // without if condition getProjectTaskHistory will go in infinite loop\n    if (this.state.flag !== true) {\n      this.props.getProjectTaskHistory(nextProps.project_task.id);\n    }\n\n    this.setState({ flag: true });\n  }\n  render() {\n    const { project_task } = this.props;\n\n    const projectTask_histories = this.props.projectTask_history;\n\n    let priorityText;\n    let priorityClass;\n\n    const priority = project_task => {\n      if (project_task.priority === \"1\") {\n        priorityClass = \"bg-danger text-light\";\n        return <span>High</span>;\n      } else if (project_task.priority === \"2\") {\n        priorityClass = \"bg-warning text-light\";\n        return <span>Medium</span>;\n      } else {\n        priorityClass = \"bg-info text-light\";\n        return <span>Low</span>;\n      }\n    };\n\n    priorityText = priority(project_task);\n    return (\n      <div className=\"project\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link\n                to={`/projectBoard/${project_task.projectIdentifier}`}\n                className=\"btn btn-light\"\n              >\n                Back to Project Board\n              </Link>\n              <div className=\"card mt-4\">\n                <div className={`card-header ${priorityClass}`}>\n                  <p className=\"lead text-center\">\n                    Project Name: {project_task.projectIdentifier} + Project\n                    Task Id : {project_task.projectSequence}\n                  </p>\n                </div>\n                <div className=\"card-body\">\n                  <p className=\"card-text font-weight-normal\">\n                    <strong>Summary: </strong> {project_task.summary}\n                  </p>\n                  <p className=\"card-text font-weight-normal\">\n                    <strong>Task Assignee: </strong>{\" \"}\n                    {project_task.projectTaskAssignee}\n                  </p>\n                  <p className=\"card-text font-weight-normal\">\n                    <strong>Due date: </strong>{\" \"}\n                    {Moment(project_task.dueDate).format(\"YYYY-MM-D\")}\n                  </p>\n                  <p className=\"card-text font-weight-normal\">\n                    <strong>Status: </strong> {project_task.status}\n                  </p>\n                  <p className=\"card-text font-weight-normal\">\n                    <strong>Created On: </strong>{\" \"}\n                    {Moment(project_task.createdAt).format(\"YYYY-MM-D\")}\n                  </p>\n                  <p className=\"card-text font-weight-normal\">\n                    <strong>Last Update on: </strong>{\" \"}\n                    {Moment(project_task.updatedAt).format(\"YYYY-MM-D\")}\n                  </p>\n                  <p className=\"card-text font-weight-normal\">\n                    <strong>Priority: </strong> {priorityText}\n                  </p>\n                  <p className=\"card-text font-weight-normal\">\n                    <strong>Acceptance Criteria: </strong>{\" \"}\n                    {project_task.acceptanceCriteria}\n                  </p>\n                  <hr />\n                  <h4>Task Logs / History</h4>\n\n                  {projectTask_histories.map(ph => (\n                    <TaskHistory key={ph.id} projectHistory={ph} />\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nViewProjectTask.propTypes = {\n  project_task: PropTypes.object.isRequired,\n  projectTask_history: PropTypes.array.isRequired,\n  getProjectTaskHistory: PropTypes.func.isRequired,\n  getProjectTask: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project_task: state.backlog.project_task,\n  projectTask_history: state.backlog.projectTask_history\n});\nexport default connect(\n  mapStateToProps,\n  {\n    getProjectTask,\n    getProjectTaskHistory\n  }\n)(ViewProjectTask);\n","import React, { Component } from \"react\";\nimport { Pie } from \"react-chartjs-2\";\nimport { ChartOptions } from \"chart.js\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getUserTaskTimer } from \"../../actions/backlogAction\";\n\nclass PieChart extends Component {\n  constructor() {\n    super();\n\n    this.state = { project_task: {} };\n  }\n\n  componentDidMount() {}\n  componentWillReceiveProps(nextProps) {\n    this.setState({ project_task: nextProps.project_task });\n  }\n  render() {\n    const { projectTask_Timer_ } = this.props;\n    const { project_task } = this.props;\n\n    let priorityString;\n\n    if (this.state.project_task.priority === \"1\") {\n      priorityString = \"HIGH\";\n    }\n\n    if (this.state.project_task.priority === \"2\") {\n      priorityString = \"MEDIUM\";\n    }\n\n    if (this.state.project_task.priority === \"3\") {\n      priorityString = \"LOW\";\n    }\n\n    const data = {\n      labels: [\"TO_DO\", \"IN_PROGRESS\", \"DONE\"],\n      datasets: [\n        {\n          data: [\n            projectTask_Timer_.timeInToDo,\n            projectTask_Timer_.timeInProgress,\n            projectTask_Timer_.timeInDone\n          ],\n\n          backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\n          hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"]\n        }\n      ]\n    };\n\n    let options: ChartOptions = {\n      legend: {\n        position: \"bottom\"\n      }\n    };\n\n    return (\n      <div>\n        <div className=\"row\">\n          <div className=\"col-md-6 text-center\">\n            <Pie data={data} options={options} />\n            <h5 className=\"text-info\">\n              {\" \"}\n              {this.state.project_task.projectSequence}\n            </h5>\n          </div>\n          <div className=\"col-md-6\">\n            <br />\n            <br />\n            <h5 className=\"text-info\">\n              {this.state.project_task.projectSequence}\n            </h5>\n            <h5 className=\"text-info\">{this.state.project_task.summary}</h5>\n            <h5 className=\"text-info\">{this.state.project_task.status}</h5>\n            <h5 className=\"text-info\">{priorityString}</h5>\n            <h5 className=\"text-info\">\n              {this.state.project_task.projectTaskAssignee}{\" \"}\n            </h5>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { getUserTaskTimer }\n)(PieChart);\n","import React, { Component } from \"react\";\nimport { Pie } from \"react-chartjs-2\";\nimport { ChartOptions } from \"chart.js\";\nimport {\n  getProjectTaskTimersArray,\n  getProjectTasksForTimer\n} from \"../../actions/backlogAction\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport PieChart from \"./PieChart\";\n\nclass ProjectCharts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.props.getProjectTaskTimersArray(this.props.match.params.id);\n    this.props.getProjectTasksForTimer(this.props.match.params.id);\n  }\n\n  render() {\n    const { projectTask_Timer } = this.props;\n    const { project_tasks } = this.props;\n    return (\n      <div>\n        <div className=\"projects\">\n          <div className=\"container\">\n            <h5 className=\"display-4 text-left ml-auto alert-info rounded p-2\">\n              Project: {this.props.match.params.id} Analytics\n            </h5>\n            {projectTask_Timer.map((ph, index) => (\n              <PieChart\n                key={ph.id}\n                projectTask_Timer_={ph}\n                project_task={project_tasks[index]}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nProjectCharts.propTypes = {\n  projectTask_Timer: PropTypes.array.isRequired,\n  project_tasks: PropTypes.array.isRequired,\n  getProjectTaskTimersArray: PropTypes.func.isRequired,\n  getProjectTasksForTimer: PropTypes.func.isRequired\n};\nconst mapStateToProps = state => ({\n  projectTask_Timer: state.backlog.projectTask_Timer,\n  project_tasks: state.backlog.project_tasks\n});\nexport default connect(\n  mapStateToProps,\n  {\n    getProjectTaskTimersArray,\n    getProjectTasksForTimer\n  }\n)(ProjectCharts);\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport Header from \"./components/Layout/Header\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport AddProject from \"./components/Project/AddProject\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport UpdateProject from \"./components/Project/UpdateProject\";\r\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\r\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\r\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\r\nimport Landing from \"./components/Layout/Landing\";\r\nimport Register from \"./components/userManagement/Register\";\r\nimport Login from \"./components/userManagement/Login\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setJWToken from \"./securityFunctions/setJWToken\";\r\nimport { SET_CURRENT_USER } from \"./actions/types\";\r\nimport { logout } from \"./actions/securityAction\";\r\nimport SecureRoute from \"./securityFunctions/secureRoute\";\r\nimport AddTeamMember from \"./components/ProjectBoard/TeamMember/AddTeamMember\";\r\nimport OtherProject from \"./components/Project/OtherProject\";\r\nimport TaskAssigneeProjectBoard from \"./components/ProjectBoard/TaskAssigneeProjectBoard\";\r\nimport ViewProjectTask from \"./components/ProjectBoard/ProjectTasks/ViewProjectTask\";\r\nimport ProjectCharts from \"./components/Project/ProjectCharts\";\r\n\r\nconst jwtToken = localStorage.jwtToken;\r\n\r\nif (jwtToken) {\r\n  setJWToken(jwtToken);\r\n  const decodeJWToken = jwt_decode(jwtToken);\r\n\r\n  store.dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: decodeJWToken\r\n  });\r\n\r\n  const currentTime = Date.now() / 1000;\r\n\r\n  if (decodeJWToken.exp < currentTime) {\r\n    store.dispatch(logout());\r\n    window.location.href = \"/\";\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Header />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          {\r\n            // publc routes\r\n          }\r\n          <Route exact path=\"/\" component={Landing} />\r\n          <Route exact path=\"/register\" component={Register} />\r\n          <Route exact path=\"/login\" component={Login} />\r\n          {\r\n            // private routes\r\n          }\r\n          <Switch>\r\n            <SecureRoute exact path=\"/dashboard\" component={Dashboard} />\r\n            <SecureRoute exact path=\"/addProject\" component={AddProject} />\r\n            <SecureRoute\r\n              exact\r\n              path=\"/updateProject/:id\"\r\n              component={UpdateProject}\r\n            />\r\n            <SecureRoute\r\n              exact\r\n              path=\"/analytics/:id\"\r\n              component={ProjectCharts}\r\n            />\r\n            <SecureRoute\r\n              exact\r\n              path=\"/projectBoard/:id\"\r\n              component={ProjectBoard}\r\n            />\r\n            <SecureRoute\r\n              exact\r\n              path=\"/addProjectTask/:id\"\r\n              component={AddProjectTask}\r\n            />\r\n            <SecureRoute\r\n              exact\r\n              path=\"/addTeamMember/:id\"\r\n              component={AddTeamMember}\r\n            />\r\n            <SecureRoute\r\n              exact\r\n              path=\"/otherProjects/\"\r\n              component={OtherProject}\r\n            />\r\n            <SecureRoute\r\n              exact\r\n              path=\"/OtherBoard/:id\"\r\n              component={TaskAssigneeProjectBoard}\r\n            />\r\n            <SecureRoute\r\n              exact\r\n              path=\"/updateProjectTask/:backlog_id/:projectTask_id\"\r\n              component={UpdateProjectTask}\r\n            />\r\n            <SecureRoute\r\n              exact\r\n              path=\"/viewProjectTask/:backlog_id/:projectTask_id\"\r\n              component={ViewProjectTask}\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}